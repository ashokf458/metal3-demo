---
# tasks file for vm creation

- name: See if VM {{ vm_instance_name }} exist
  become: yes
  community.libvirt.virt:
    command: list_vms
  register: list_vms_result

- name: Print VMs
  debug:
    msg: "Current defined VMs: {{ list_vms_result.list_vms }}"

- name: Shutdown VM {{ vm_instance_name }}
  become: yes
  community.libvirt.virt:
    name: "{{ vm_instance_name }}"
    state: destroyed
  when: vm_instance_name in list_vms_result.list_vms

- name: Ensure virsh is installed
  command:
   cmd: which virsh

- name: Detach OS disk from VM
  become: yes
  command:
    cmd: virsh detach-disk {{ vm_instance_name }} --target sda --config

- name: Detach Config disk from VM
  become: yes
  command:
    cmd: virsh detach-disk {{ vm_instance_name }} --target sdb --config

- name: Download latest {{ cloud_image_os_name }} cloud image
  become: yes
  get_url:
    url: "{{ cloud_image_download_url }}"
    dest: "{{ cloud_image_file }}"
    checksum: "{{ cloud_image_checksum_url }}"
    validate_certs: false

- name: Remove old disk image
  become: yes
  file:
    path: "{{ disk_image_file }}"
    state: absent

- name: Create a disk image from cloud image
  become: yes
  shell: |
    qemu-img create -f qcow2 -F qcow2 -o backing_file={{ cloud_image_file }} {{ disk_image_file }}
    qemu-img resize {{ disk_image_file }} {{ disk_image_size }}

- name: Create meta data file
  template:
    src: meta-data.j2
    dest: /tmp/meta-data
    mode: 0600

- name: Create user data file
  template:
    src: user-data.j2
    dest: /tmp/user-data
    mode: 0600

- name: Remove old cloud init image file
  become: yes
  file:
    path: "{{ cloud_init_image_file }}"
    state: absent

- name: Create network config file
  copy:
    dest: /tmp/network-config
    content: "{{ vm_network }}"

- name: Create cloud init image with network-config
  become: yes
  shell: >
    mkisofs -output {{ cloud_init_image_file }} -volid cidata -joliet -rock /tmp/meta-data /tmp/user-data /tmp/network-config

- name: Remove cloud init data
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/meta-data
    - /tmp/user-data
  when: remove_cloud_init_data | default(false)

- name: Ensure virsh is installed
  shell:
    which virsh

- name: Attach OS disk to VM
  become: yes
  command:
    cmd: virsh attach-disk {{ vm_instance_name }} --source {{ disk_image_file }} --targetbus scsi --target sda --type disk --subdriver qcow2 --config
  register: shell_result

- name: Print attach OS disk result
  debug:
    msg: "{{ shell_result }}"

- name: Attach Config disk to VM
  become: yes
  command:
    cmd: virsh attach-disk {{ vm_instance_name }} --source {{ cloud_init_image_file }} --targetbus sata --target sdb --type cdrom --mode readonly --config
  register: shell_result

- name: Print attach Config disk result
  debug:
    msg: "{{ shell_result }}"

- name: Set boot to hd
  become: yes
  command:
    cmd: virt-xml {{ vm_instance_name }} --edit  --boot hd

- name: Start the VM
  community.libvirt.virt:
    name: "{{ vm_instance_name }}"
    state: running
